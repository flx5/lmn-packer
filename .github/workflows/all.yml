name: Build all

on:
  push:

jobs:
  qemu:
    runs-on: [self-hosted, qemu]
    env: 
      PACKER_LOG: 1
      PACKER_CACHE_DIR: /home/github/actions-runner/packer_cache/
      PKR_VAR_qemu_bridge: vmbr1
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Create directories
        run: mkdir -p logs screenshots
        
      - name: Prepare tools
        working-directory: ./tools/xva-img/
        run: |
          cmake .
          make
        
      - name: Build OPNSense Base
        env:
           PACKER_LOG_PATH: logs/opnsense-base.log
        run: |
           ./take_screenshots.sh logs/opnsense-base.log opnsense-base 60 &
           PID=$!
           packer build -only qemu.opnsense -var headless=true 18
           kill $PID

      - name: List opnsense-base artifacts
        run: ls -lh output-opnsense
        
      - name: Convert to virtualbox
        env:
           PACKER_LOG_PATH: logs/opnsense-virtualbox.log
        run: packer build -only qemu.opnsense-virtualbox -var headless=true 18
        
        # TODO Test on virtualbox with virtualbox-ovf.opnsense-virtualbox-test
        
      - name: Convert to Xen
        env:
           PACKER_LOG_PATH: logs/opnsense-xen.log
        run: packer build -only qemu.opnsense-xen -var headless=true 18
        
        # TODO Test import on xen
        
      - name: Build XCP-NG VM
        env:
           PACKER_LOG_PATH: logs/xcp-ng.log
        run: |
           ./take_screenshots.sh logs/xcp-ng.log xen 60 &
           PID=$!
           packer build -only qemu.xcp-ng -var headless=true build_infrastructure
           kill $PID
           
      - name: Start XCP-NG VM
        run: |
          qemu-system-x86_64 -machine type=pc,accel=kvm -cpu host -m 8192 -smp 8,sockets=2,cores=4  \
          -object iothread,id=io1 \
          -device virtio-blk-pci,drive=disk0,iothread=io1 \
          -drive if=none,id=disk0,cache=none,format=raw,aio=threads,file=output-xcp-ng/xcp-ng \
          -netdev user,id=user.0,net=192.168.122.0/24,dhcpstart=192.168.122.9,hostfwd=tcp::0-:22,hostfwd=tcp::0-:443 \
          -device virtio-net,netdev=user.0 \
          -netdev user,id=user.1,net=10.0.0.0/8,restrict=y \
          -device virtio-net,netdev=user.1 \
          -monitor unix:$PWD/mon.sock,server,nowait &
      - name: Get XCP-NG Ports
        run: |
          ports=$(echo 'info usernet' | socat - UNIX-CONNECT:./mon.sock | grep HOST_FORWARD | tr -s ' ' | cut -d' ' -f 5,7)
          while IFS= read -r line; do
              split=( $line )
              echo "Host: ${split[0]} Guest: ${split[1]}"
              echo "port_mapping_${split[1]}=${split[0]}" >> $GITHUB_ENV
          done <<< "$ports"
      - name: Wait for xcp-ng to boot
        run: sleep 300
        
      - name: Import VM
        run: |
          sshpass -p 'Muster!' scp -P ${{ env.port_mapping_22 }} output-opnsense-xen/lmn7-opnsense.xva root@localhost:/opt/lmn7-opnsense.xva
          sshpass -p 'Muster!' ssh \
            -o "StrictHostKeyChecking no" \
            -p ${{ env.port_mapping_22 }} \
            root@localhost \
            "xe vm-import /opt/lmn7-opnsense.xva"
          
      - name: List output
        run: |
          ls -l output-*
          
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: logs
          path: logs/
          
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: screenshots
          path: screenshots/
