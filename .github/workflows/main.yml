# This is a basic workflow to help you get started with Actions

name: CI
concurrency: vm_host

env:
  VM_ID: 600

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/proxmoxer/requirements.txt
    - name: Start VM
      env:
        PROXMOX_HOST: ${{ secrets.PROXMOX_HOST }}
        PROXMOX_USER: ${{ secrets.PROXMOX_USER }}
        PROXMOX_PASSWORD: ${{ secrets.PROXMOX_PASSWORD }}
      run: |
        python ./tools/proxmoxer/manage-vm.py --node pve --vm $VM_ID start

  # This workflow contains a single job called "build"
  build:
    needs: setup
    # The type of runner that the job will run on
    runs-on: [self-hosted, proxmox]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build OPNSense
        run:
           packer build -only=proxmox-iso.opnsense -var 'proxmox_password=Muster!' -var 'proxmox_node=proxmox' -var 'proxmox_disk_pool=local' -var 'proxmox_disk_pool_type=directory' -var 'proxmox_disk_format=raw' 18
        
      - name: Export OPNSense
        run: |
          mkdir -p dump
          vzdump --compress lzo --dumpdir ./dump/ 200
          
          # TODO UPLOAD TO FILESERVER
          
           
      - name: Cleanup
        if: ${{ always() }}
        run: |
          # TODO Disabled for debugging
          #sudo qm destroy 200
          sudo rm /var/lib/vz/template/iso/*
          
          
  teardown:
    runs-on: ubuntu-latest
    
    if: always()
    needs: build
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/proxmoxer/requirements.txt
    - name: Stop VM
      env:
        PROXMOX_HOST: ${{ secrets.PROXMOX_HOST }}
        PROXMOX_USER: ${{ secrets.PROXMOX_USER }}
        PROXMOX_PASSWORD: ${{ secrets.PROXMOX_PASSWORD }}
      run: |
        python ./tools/proxmoxer/manage-vm.py --node pve --vm $VM_ID shutdown
